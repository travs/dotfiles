# set prefix key to <Esc-Space>
set -g prefix M-Space
unbind-key C-b
bind-key M-Space send-prefix

# set mode-keys to vi bindings
setw -g mode-keys vi

# artificial vi bindings
# v starts a selection and y finishes it
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "pbcopy"

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
# From https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Bind ']' to use pbpaste
bind ] run "pbpaste | tmux load-buffer - && tmux paste-buffer"

# Turn on mouse mode
set -g mouse on

# Ctrl-R: Reload tmux config
bind r source-file ~/.tmux.conf \; display 'Config reloaded'
bind C-R source-file ~/.tmux.conf \; display 'Config reloaded'

# powerline status bar
#source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

